/*
 * Made with <3 by bcersows.
 * version 1.2.1
 */
.weather {
  position: relative;
  
  .weather-wrapper {
    height: 100%;
    left: 0;
    overflow: hidden;
    pointer-events: none;
    position: absolute;
    top: 0;
    width: 100%;

    div.weather-element {
      position: absolute;
    }

    &.rain {
      @keyframes drops {
        from {top: 0px;}
        to {top: 100%;}
      }
      div.weather-element {
        animation: drops 2s linear infinite;
        background: linear-gradient(lighten(blue, 20%), blue);
        height: 20px;
        opacity:0.5;
        top: 0;
        transform: rotate(5deg);
        width: 5px;
      }
    }

    &.snow {
      @keyframes snow {
        @random: `(Math.random() - 0.5) * 20`;
        0%  { margin-left: ~"@{random}px"; top: 0; }
        @random: `(Math.random() - 0.5) * 20`;
        10%  { margin-left: ~"@{random}px"; top: 10%; }
        @random: `(Math.random() - 0.5) * 20`;
        20%  { margin-left: ~"@{random}px"; top: 20%; }
        @random: `(Math.random() - 0.5) * 20`;
        30%  { margin-left: ~"@{random}px"; top: 30%; }
        @random: `(Math.random() - 0.5) * 20`;
        40%  { margin-left: ~"@{random}px"; top: 40%; }
        @random: `(Math.random() - 0.5) * 20`;
        50%  { margin-left: ~"@{random}px"; top: 50%; }
        @random: `(Math.random() - 0.5) * 20`;
        60%  { margin-left: ~"@{random}px"; top: 60%; }
        @random: `(Math.random() - 0.5) * 20`;
        70%  { margin-left: ~"@{random}px"; top: 70%; }
        @random: `(Math.random() - 0.5) * 20`;
        80%  { margin-left: ~"@{random}px"; top: 80%; }
        @random: `(Math.random() - 0.5) * 20`;
        90%  { margin-left: ~"@{random}px"; top: 90%; }
        @random: `(Math.random() - 0.5) * 20`;
        100%  { margin-left: ~"@{random}px"; top: 100%; }
      }

      div.weather-element {
        animation: snow 10s linear infinite;

        &:after {
          content: "*";
        }
      }
    }

    &.sun {
      @keyframes rays {
        from {height: 0px;}
        to {height: 100%;}
      }
      div.weather-element {
        animation: rays 3s linear infinite;
        background: linear-gradient(#fbac13, lighten(#fbac13, 20%));
        height: 290px;
        opacity:0.3;
        top: -5px;
        transform: rotate(10deg);
        width: 5px;
      }
    }
    
    &.wind {
      @keyframes wind-bottom {
        from {left: -15px;}
        to {left: 100%;}
      }
      @keyframes wind-loop {
        0% {left: 0px;}
        30% {left: 50%;}
        35% {left: 55%; bottom: 20%;}
        40% {left: 60%; bottom: 30%;}
        45% {left: 55%; bottom: 35%;}
        50% {left: 50%; bottom: 40%;}
        55% {left: 45%; bottom: 35%;}
        60% {left: 40%; bottom: 30%;}
        65% {left: 45%; bottom: 20%;}
        70% {left: 50%;}
        100% {left: 100%;}
      }
      div.weather-element {
        animation-duration: 3s;
        animation-iteration-count: infinite;
        animation-timing-function: linear;
        background: lightgrey;
        bottom: 5px;
        height: 5px;
        opacity:0.4;
        left: -15px !important;
        width: 15px;
        
        &:nth-of-type(1n),
            &:nth-of-type(2n),
            &:nth-of-type(3n),
            &:nth-of-type(4n),
            &:nth-of-type(5n),
            &:nth-of-type(6n) {
            animation-name: wind-bottom;
        }
        &:nth-of-type(7n),
            &:nth-of-type(8n),
            &:nth-of-type(9n),
            &:nth-of-type(10n) {
            animation-name: wind-loop;
        }
        &:nth-of-type(1n) { bottom: 5px; }
        &:nth-of-type(2n) { bottom: 8px; }
        &:nth-of-type(3n) { bottom: 11px; }
        &:nth-of-type(4n) { bottom: 14px; }
        &:nth-of-type(5n) { bottom: 17px; }
        &:nth-of-type(6n) { bottom: 20px; }
        &:nth-of-type(7n) { bottom: 25px; }
        &:nth-of-type(8n) { bottom: 27px; }
        &:nth-of-type(9n) { bottom: 29px; }
        &:nth-of-type(10n) { bottom: 30px; }
      }
    }

    // create delay
    .generate-delay(10);
    .generate-delay(@n, @i: 1) when (@i =< @n) {
      @random: `Math.random()`;
      div.weather-element:nth-of-type(@{i}n) {
        animation-delay: ~"@{random}s";
        left: (@i - 1)*(100%/(@n - 1));
      }
      .generate-delay(@n, (@i + 1));
    }
  }
}